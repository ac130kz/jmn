<html>
    <head>
        <title>Project Home Page</title>
        <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    </head>
    
    <body bgcolor="#FFFFFF" text="#000000">
        <h1><font color="red">Welcome to the JFugue Music NotePad!</font></h1>
        <p>The aim of this open source project is to provide
        a simple standalone application for composing music
        and generating MIDI files. The underlying functionality provided
        by this application comes
        from its reliance on the <a href="http://www.jfugue.org/">JFugue API</a>. The JFugue API
        provides a simple yet powerful set of classes for playing and saving MIDI files. The
        user interface that is built on top of this API is based on the
        <a href="http://www.netbeans.org/products/platform/">NetBeans Platform</a>. 
        
        <p>All
        that the user interface does is enable the user to generate JFugue music strings, without
        needing to understand what they are, how they work, or what they're for. For example, when a quarter note
        is dragged to the "E" line in the clef register of the music sheet, a string consisting
        of "E5q" is generated in the Editor (right side of the screen, below the Palette). 
        The JFugue API knows what to do with this string and,
        when File > Play is selected, the JFugue API plays the note. When File > Save is selected,
        the complete content of the Editor, which contains all the JFugue music strings in the
        order in which they were added, is played and then
        saved as a MIDI file. When a new instrument is selected, a related string is added to the editor,
        and all subsequent notes are played by the last selected instrument.
        
        <p>A screenshot of the user interface:
        (more screenshots are available by clicking on the item "Documents & files", in the navigator on the left side)
        
        <p><img border="2" src="music-notepad_newest.png">
        
        <p>The application currently lets you do all of the following:
        
         <ul>
            <li><b>Create new music sheets.</b> Choose File | New to create your first music sheet. A wizard appears, make
            your selections, and click Finish. You now have a music sheet. You can create multiple music sheets; all actions
            you perform apply to the current music sheet.
            <li><b>Add notes to the music sheet.</b> Click a note in the toolbar, set (if applicable) whether a sharp
            or flat should be applied, and then click the music sheet. You have now added a note to the music sheet. The
            application prevents you from adding a note if doing so would result in the added note exceeding the number
            of beats in the measure, as shown in the screenshot above, via a red message in the toolbar.
            <li><b>Change notes.</b> Select one or more notes with your mouse. Notice that the selected notes are now red.
            Now click the Up arrow and Down arrow to move the notes up and down. Click the Left arrow and Right arrow
            to increase or decrease the duration of the selected notes.
            <li><b>Delete notes.</b> Select one or more notes with your mouse. Notice that the selected notes are now red.
            Now click the Delete key and the selected notes are deleted, while the remaining ones are redistributed.
            <li><b>Change instruments.</b> Right-click an instrument in the Instruments window (if it is not open, go
            to the Window menu to open it) and choose Select. You can also choose Sample, to hear a sample of the instrument.
            Now, all notes dropped after you selected the instrument will be played by the instrument.
            <li><b>View JFugue music strings.</b> Open the JFugue Commands window and notice that all the instruments
            and notes that you have selected have been generated there, with helpful syntax coloring. There is no need
            for you to understand these strings, that's why you're using this application in the first place!
            <li><b>Print music sheets.</b> Choose File | Print. A Preview appears, from which you can print. 
            You might need to resize the application
            a bit, because the size of the current music sheet determines the length and breadth of the print output.
            <li><b>Play music.</b> Click the Play button in the sheet's toolbar and the current music sheet is played.
            <li><b>Save music.</b> Click the Save button in the sheet's toolbar and the current music sheet is saved.
            <li><b>Add plugins.</b> If/when plugins for the application become available, simply choose Tools | Update Center
            and then use the Update Center wizard to install the plugins.
        </ul>
        
        
        <p><a href="https://nbjfuguesupport.dev.java.net/source/browse/*checkout*/nbjfuguesupport/www/binary/mnotepad_8April2008.zip">Download the binary.</a>
        
        <p><h3>How to Install the JFugue Music NotePad</h3>
        
        <p>If you want to contribute code to this open source project, you are very welcome
        to do so. 
        
        <font color="red"><p><b>Please note:</b> We have not moved to NetBeans Platform 6.0 yet.
         There is a 6.0 brance, but it hasn't been merged into the trunk yet. The trunk is 
         still at 5.5 level.</font>
        
        
        <p>Take the following steps to access the sources and to set them up:
        
        <ol>
            <li>All the sources are in this open source project's
            VCS. Go <a href="https://nbjfuguesupport.dev.java.net/source/browse/nbjfuguesupport/">here</a>
            to see them. Go <a href="https://nbjfuguesupport.dev.java.net/servlets/ProjectSource">here</a>
            for information that you'll need for checking out the sources.
            <li>Once you have checked out the sources, you will have three NetBeans projects: a main
            project (a.k.a. a "module suite"), a module that provides functionality, and a module
            that wraps the JFugue API.
            <li>Start up NetBeans IDE 5.5. If there are problems
            relating to conflicting dependencies or anything else, subscribe and write to
            <a href="https://nbjfuguesupport.dev.java.net/servlets/SummarizeList?listName=dev">dev@nbjfuguesupport.dev.java.net</a>.
            <li>Run the module suite (called "Music NotePad"). 
            <li>Because the JFugue API is bundled with the application, you should be able to play and
            save the strings that you generate immediately. However, note the list of known shortcomings below.
            <li>If you would like to generate a standalone application from the sources, with an
            executable (or a JNLP web startable application), just right click the "Music NotePad" module
            suite, and choose either "Create ZIP Distribution" or "Create JNLP Application". Then a complete
            application, that will be able to exist as a first class application in your system, will
            be generated for you.
            
        </ol>
        
        <p><h3>The JFugue Music NotePad is Incomplete!</h3>
        
        <p>The JFugue Music NotePad is functional. However, it is very far from complete. What still needs
        to be done (change the status and add your name if you are working or planning to work on one
        or more of these or just write to the mailing list and say what you're planning to do):
        
     <p>   <a href="https://nbjfuguesupport.dev.java.net/issues/buglist.cgi?Submit+query=Submit+query&component=nbjfuguesupport&issue_status=NEW&issue_status=STARTED&issue_status=REOPENED&version=current&email1=&emailtype1=exact&emailassigned_to1=1&email2=&emailtype2=exact&emailreporter2=1&issueidtype=include&issue_id=&changedin=&votes=&chfieldfrom=&chfieldto=Now&chfieldvalue=&short_desc=&short_desc_type=fulltext&long_desc=&long_desc_type=fulltext&issue_file_loc=&issue_file_loc_type=fulltext&status_whiteboard=&status_whiteboard_type=fulltext&field0-0-0=noop&type0-0-0=noop&value0-0-0=&cmdtype=doit&order=Reuse+same+sort+as+last+time">All unresolved issues in Issuezilla for this project</a>
        
        <hr>
        
 <!--       <table border="1">
        <thead>
            <tr>
                <th>Number</th>
                <th>Priority</th>
                <th>Short Description</th>
                <th>Long Description</th>
                <th>Related Issues</th>
                <th>Submitter</th>
                <th>Status</th>
                <th>Comments</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>1</td>
                <td>P1</td>
                <td>Not possible to modify after dropping</td>
                <td>
                    Only the simplest implementation of the JFugue API is currently supported. In future, once the
                    basics are done, more complex functionality such as chords and voices and combined notes
                    can be added. Currently, each note in the Editor is played from top to bottom. As a result
                    of this:
                    <ul>
                        <li>Notes can only be dropped from left to right. If a note is inserted between two other
                        notes, or if a note is added to the left of an existing note, the Editor will behave
                        as if the note had been added to the right of all the existing notes, i.e., strings
                        are added to the Editor sequentially and currently there is no support for other
                        ways of adding notes.
                        <li>Even though notes can be dragged after they have been dropped, the Editor is not
                        updated. So, instead of the related string being replaced by a new string,
                        the new string is simply added to the end of the existing strings and the old string
                        is not removed.
                        <li>Individual notes cannot be removed after you add them. (Except, when you choose File > New, the
                        whole music sheet is emptied.)
                    </ul>
                </td>
                <td>-</td>
                <td>Geertjan</td>
                <td>In progress. (Geertjan)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>2</td>
                <td>P2</td>
                <td>Drag image tested under Windows only</td>
                <td>
                    The drag image that appears when a note is dragged has only been tested under Windows. Possibly,
                    no drag image will appear when a note is dragged on other platforms.
                </td>
                <td>-</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>3</td>
                <td>P3</td>
                <td>Palette drag cursor must change</td>
                <td>
                    When dragging a note within the Music Sheet, the cursor changes to a hand. The cursor should
                    also change to a hand when dragging from the Palette into the Music Sheet, but this is
                    currently not supported. (Also, an annoying square appears at the cursor when you drag a note
                    from the Palette.)
                </td>
                <td>14</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>4</td>
                <td>P1</td>
                <td>Music dies suddenly</td>
                <td>
                    For reasons that are not clear, after about 15 instances of music being played, the
                    music stops and a restart is needed to re-enable the music.
                </td>
                <td>9</td>
                <td>Geertjan</td>
                <td>Solved. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>5</td>
                <td>P3</td>
                <td>Flats and sharps</td>
                <td>Flats and sharps are currently not supported.</td>
                <td>-</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>6</td>
                <td>P2</td>
                <td>Unsupported lower register</td>
                <td>
                    Only the upper register (Clef) currently produces notes in the Editor. The lower register
                    does not. In some cases, the upper register is not covered completely, so that garbage is
                    generated to the Editor. All "y" values should ultimately be covered.
                </td>
                <td>18</td>
                <td>Geertjan</td>
                <td>In progress. (Geertjan)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>7</td>
                <td>P3</td>
                <td>Main screen too big by default</td>
                <td>
                    Need to have a smaller default size for the main screen, so that at start up, the user
                    sees the optimal size rather than a very large NetBeans Platform application.
                </td>
                <td>-</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>8</td>
                <td>P4</td>
                <td>Toolbars and menus don't work</td>
                <td>
                    Several parts of the user interface are non-functional. For example, the Midi Files window, most
                    of the menu items, and the toolbar. However, there is an Update Center wizard in the Tools menu
                    that you can use for adding functionality to the application. The main functional parts of the
                    application are the Music Sheet, the Palette window, the Instruments window, and the Editor window.
                </td>
                <td>-</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>9</td>
                <td>P3</td>
                <td>Threading</td>
                <td>The music string needs to be played in its own thread. Currently not supported.</td>
                <td>4</td>
                <td>Geertjan</td>
                <td>Solved. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>10</td>
                <td>P3</td>
                <td>Play instrument on drop</td>
                <td>Currently, when a note is dropped, only the note and duration, but not
                the instrument are played. When the drop is done, the last instrument dropped
                needs to be found in the editor, and that instrument (instead of the default piano)
                must be used for playing the dropped note.</td>
                <td>16</td>
                <td>Geertjan</td>
                <td>Solved. (Geertjan)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>11</td>
                <td>P3</td>
                <td>Replace Instruments panel with tree</td>
                <td>The current choice of an instrument is space consuming, 
                and hard to maintain while extending to all possible instruments. 
                Better would be a (text) tree, with categories and instruments/category.</td>
                <td>-</td>
                <td>Pierre</td>
                <td>Done. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>12</td>
                <td>P3</td>
                <td>Multiple note drop</td>
                <td>Should be able to drop multiple notes (without dragging !),
                until a different kind of note is selected (in the future, there 
                could be a popup menu, or some mechanism with the mouse-wheel, 
                to change more easily and rapidly).</td>
                <td>-</td>
                <td>Pierre</td>
                <td>Done. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>13</td>
                <td>P1</td>
                <td>Turn music sheet into object</td>
                <td>The music-sheet actually is nothing more than an image ?
                Why not make an object of it ? A collection of staff objects ? 
                So we can ask for the ?row? and the ?column? of a dropped note 
                (like a JTable). That staff object could also function as a container 
                for all the notes, with their own set of properties, ?
                This makes it much easier to resize the sheet, to handle multiple 
                staffs, to insert or delete notes, to interrogate the melody and 
                play or save it, ? ?.</td>
                <td>17</td>
                <td>Pierre</td>
                <td>Partial done. (Pierre)</td>
                <td>To be extended with F-Clef, C-Clef, Piano-Stave, ...
                mechanism to add staves when needed ... sort of TimeLine to insert, delete notes</td>
            </tr>
            <tr>
                <td>14</td>
                <td>P3</td>
                <td>Cursor should change when dragging</td>
                <td>After selecting a kind of note (or rest) (whole, half, ?) 
                the cursor should change to that note (without an arrow, a hand,
                and the annoying rectangle).</td>
                <td>3</td>
                <td>Pierre</td>
                <td>Solved. (Geertjan)</td>
                <td>Although this is marked as solved, the hand is still there.
                Is this okay for you, or do you think we should remove the hand
                as well? I know how to do it, shouldn't be a problem.</td>
            </tr>
            <tr>
                <td>15</td>
                <td>P2</td>
                <td>Whole notes wrong</td>
                <td>The dropping of whole notes now returns mostly wrong values.</td>
                <td>-</td>
                <td>Pierre</td>
                <td>Solved. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>16</td>
                <td>P2</td>
                <td>Drop should result in related sound being played</td>
                <td>The sound heard after dropping a note, is always the same, 
                in other words doesn't reflect the chosen note.</td>
                <td>10</td>
                <td>Pierre</td>
                <td>Solved. (Geertjan)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>17</td>
                <td>P1</td>
                <td>General class note</td>
                <td>A class for each duration of a note (whole, half, quarter, ?) ?
                Why not a general class Note ? With the note, octave, sharp or flat, and
                duration as the base properties ? Other properties can
                be (in the future) velocity, ?
                <td>13</td>
                <td>Pierre</td>
                <td>Solved. (Pierre)</td>
                <td>-</td>
            </tr>
            <tr>
                <td>18</td>
                <td>P2</td>
                <td>Drop out of x and y range</td>
                <td>When dropping note out of range (x or y), cursor should change and
                drop should not be permitted.
                <td>6</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>see mail of 07-28-2006</td>
            </tr>
            <tr>
                <td>19</td>
                <td>P2</td>
                <td>Syntax coloring should be extended</td>
                <td>Currently only a small subset of JFugue notation is supported. Ultimately,
                everything should be included.
                <td>20</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>20</td>
                <td>P2</td>
                <td>Samples not correctly supported yet</td>
                <td>Samples under the Help menu should drop notes
                on the music sheet while the sample is played, and the
                syntax highlighting needs to be fixed up.
                <td>19</td>
                <td>Geertjan</td>
                <td>Not started.</td>
                <td>-</td>
            </tr>
            <tr>
                <td>21</td>
                <td>P1</td>
                <td>Short notes (1/16) not heard</td>
                <td>When dropping a sixteenth note there's no sound.
                Also, when the song ends with a sixteenth.
                <td>-</td>
                <td>Pierre</td>
                <td>Solved. (Pierre)</td>
                <td>Enlarged the time that the JFugue's Player waits, with half a second.
                Not realy satisfied with this solution ...
                Tried with synchronized, without result</td>
            </tr>
        </tbody>
        <p><hr> --> <p>
    </body>
</html>

